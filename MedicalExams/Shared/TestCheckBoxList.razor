<div>
    @if (Data != null)
    {
        foreach (Exam exam in Data)
        {
            string Name = exam.Name;
            int Id = exam.Id;
            bool Checked = false;
            if (SelectedValues.Contains(exam))
            {
                Checked = true;
            }
            <input type="checkbox" checked=@Checked @onchange="eventArgs => { CheckboxClicked(exam, eventArgs.Value); }" />
            @Name <br />
        }
    }
</div>

@code {
    //Data for the Checkbox
    [Parameter] public List<Exam> Data { get; set; }
    // The field to be shown adjacent to checkbox
    //[Parameter] public Func<TItem, string> NameField { get; set; }
    // The Value which checkbox will return when checked
    //[Parameter] public Func<TItem, object> IdField { get; set; }
    // CSS Style for the Checkbox container
    // [Parameter] public string Style { get; set; }
    // Any childd content for the control (if needed)
    // [Parameter] public RenderFragment ChildContent { get; set; }
    // The array which contains the list of selected checkboxs
    [Parameter] public List<Exam> SelectedValues { get; set; }

    //Method to update the selected value on click on checkbox
    public void CheckboxClicked(Exam aSelectedExam, object aChecked)
    {
        if ((bool)aChecked)
        {
            if (!SelectedValues.Contains(aSelectedExam))
            {
                SelectedValues.Add(aSelectedExam);
            }
        }
        else
        {
            if (SelectedValues.Contains(aSelectedExam))
            {
                SelectedValues.Remove(aSelectedExam);
            }
        }
        StateHasChanged();
    }
} 