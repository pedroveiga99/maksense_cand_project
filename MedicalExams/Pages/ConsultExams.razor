@page "/consultExams"


@inject IJSRuntime jsRuntime
@inject ApiService api



<h3>Consulta de Exames</h3>
<br />
<br />

<!--
<div style="text-align:center">
    <EditForm Model="submitedNumUtente">
        Numero de utente: <InputNumber @bind-Value=submitedNumUtente ></InputNumber>
    </EditForm>
</div>

<table id="ConsultExamsTable" style="text-align:center">

    <thead>
        <tr>
            <th>Id</th>
            <th>Data Criação</th>
            <th>Nome</th>
            <th>Quantidade de Exames</th>
            <th>+Info</th>
        </tr>
    </thead> 
    <tbody>
        @if (processes.Count != 0)
        {
            @foreach (var process in processes)
            {
                <tr>
                    <td>@process.Id</td>
                    <td>@process.ProcessDate.ToShortDateString()</td>
                    <td>@process.Person.Name</td>
                    <td>@process.Exams.Count</td>
                    <td><DetailsIcon Popup="detailsPopup" SelectedProcess="process" Show="ShowDetails"></DetailsIcon></td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="2" style="text-align:center">No data to show</td></tr>
        }
    </tbody>
</table>

<br />
<br />
-->
<!--
<MudTextField 
    @bind-Value="searchString" 
    Placeholder="Search" 
    Adornment="Adornment.Start" 
    AdornmentIcon="@Icons.Material.Filled.Search" 
    IconSize="Size.Medium" 
    Class="mt-0">
</MudTextField>

-->

<MudTable Items="@processes" Hover="true" Filter="new Func<Process,bool>(FilterFunc)" FixedHeader="true" Height="@(true ?"500px":"")">
    <ToolBarContent>
        <MudTextField 
            @bind-Value="searchString" 
            Placeholder="Pesquisar Nome ou Nº Utente"
            Adornment="Adornment.Start" 
            AdornmentIcon="@Icons.Material.Filled.Search"
            Class="mt-0">
        ></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Data Criação</MudTh>
        <MudTh>Nome</MudTh>
        <MudTh>Quantidade de Exames</MudTh>
        <MudTh>+Info</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Data Criação">@context.ProcessDate.ToShortDateString()</MudTd>
        <MudTd DataLabel="Nome">@context.Person.Name</MudTd>
        <MudTd DataLabel="Quantidade de Exames">@context.Exams.Count</MudTd>
        <MudTd DataLabel="+Info"><DetailsIcon Popup="detailsPopup" SelectedProcess="@context" Show="ShowDetails"></DetailsIcon></MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="@pageSizeOptions" RowsPerPageString="Processos por página" />
    </PagerContent>
</MudTable>


<!-- Popup with more details -->
<DetailsPopup @ref="detailsPopup"></DetailsPopup>


@code {
    List<Process> processes = new List<Process>();
    public DetailsPopup detailsPopup;
    public int submitedNumUtente;

    public int[] pageSizeOptions = { 5, 7, 10, 20, int.MaxValue };
    public string searchString = "";


    protected override async Task OnInitializedAsync()
    {
        processes = await api.GetProcessesAsync();
    }

    private void ShowDetails(Process process)
    {
        detailsPopup.Title = $"Mais Detalhes do Processo {process.Id.ToString()} ({process.ProcessDate.ToShortDateString()})";

        detailsPopup.process = process;
        detailsPopup.Show();
    }

    private bool FilterFunc(Process process)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;

        if (process.Person.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (process.Person.NumUtente.ToString().Contains(searchString))
            return true;


        return false;
    }
}
