@page "/consultExams"

@inject IJSRuntime jsRuntime
@inject ApiService api
@inject IDialogService DialogService


<h3>Consulta de Exames</h3>
<br />
<br />

<MudTable Items="@processes" Hover="true" Filter="new Func<Process,bool>(FilterFunc)" FixedHeader="true" Height="@(true ?"500px":"")">
    <ToolBarContent>
        <MudTextField 
            @bind-Value="searchString" 
            Placeholder="Pesquisar Nome ou Nº Utente"
            Adornment="Adornment.Start" 
            AdornmentIcon="@Icons.Material.Filled.Search"
            Class="mt-0">
        ></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Data Criação</MudTh>
        <MudTh>Nome</MudTh>
        <MudTh>Quantidade de Exames</MudTh>
        <MudTh>+Info</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Data Criação">@context.ProcessDate.ToShortDateString()</MudTd>
        <MudTd DataLabel="Nome">@context.Person.Name</MudTd>
        <MudTd DataLabel="Quantidade de Exames">@context.Exams.Count</MudTd>
        <MudTd DataLabel="+Info">
            <a @onclick="(() => OpenDialog(context))"><span class="oi oi-clipboard" aria-hidden="true"></span></a>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager PageSizeOptions="@pageSizeOptions" RowsPerPageString="Processos por página" />
    </PagerContent>
</MudTable>


<!-- Popup with more details -->
<DetailsPopup @ref="detailsPopup"></DetailsPopup>


@code {
    List<Process> processes = new List<Process>();
    public DetailsPopup detailsPopup;
    public int submitedNumUtente;

    public int[] pageSizeOptions = { 5, 7, 10, 20, int.MaxValue };
    public string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        processes = await api.GetProcessesAsync();
    }

    private bool FilterFunc(Process process)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;

        if (process.Person.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        if (process.Person.NumUtente.ToString().Contains(searchString))
            return true;


        return false;
    }

    private void OpenDialog(Process SelectedProcess)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        var parameters = new DialogParameters();
        parameters.Add("SelectedProcess", SelectedProcess);

        DialogService.Show<DetailsPopup>("Title", parameters, options);
    }


}
