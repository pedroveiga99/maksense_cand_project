@page "/scheduleExams"

@inject IJSRuntime jsRuntime
@inject ApiService api
@inject NavigationManager NavManager



<h3>Marcação de Exames</h3>
<br />
<br />

<EditForm Model="tempProcess" OnValidSubmit=@ValidFormSubmitted OnInvalidSubmit=@InvalidFormSubmitted>
    <ObjectGraphDataAnnotationsValidator />
    <!-- <ValidationSummary /> -->

    <table id="ScheduleExamsTable">
        
        <tbody>
            <!-- Personal Information -->
            <tr>
                <td style="width:35%">
                    <div class="form-group">
                        <label for="numUtente">Número de Utente:</label><br />
                        <InputNumber Arrows="false" @bind-Value=tempProcess.Person.NumUtente></InputNumber>
                        <ValidationMessage For="() => tempProcess.Person.NumUtente" />
                    </div>
                </td>
                <td style="width:35%">
                    <div class="form-group">
                        <label for="nome">Nome</label><br />
                        <InputText @bind-Value=tempProcess.Person.Name></InputText>
                        <ValidationMessage For="() => tempProcess.Person.Name" />
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        <label for="birthDate">Data de Nascimento</label><br />
                        <InputDate @bind-Value=tempProcess.Person.BirthDate></InputDate>
                        <ValidationMessage For="() => tempProcess.Person.BirthDate" />
                    </div>
                </td>
            </tr>
            
            <!-- Exams -->
            <tr>
                <td colspan="3">
                    <TestCheckBoxList Data="@AvailableExams" SelectedValues="@tempProcess.Exams" />
                    <ValidationMessage For="() => tempProcess.Exams" />
                </td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <td colspan ="3">
                    <input type="submit" class="btn btn-primary" value="Marcar Exames" />
                </td>
            </tr>
        </tfoot>
    </table>
</EditForm>

<!-- Popup with more details of confirmation -->
<DetailsPopup @ref="confirmationPopup"></DetailsPopup>


@code {
    Process tempProcess = new Process
        {
            Person = new Person(),
            Exams = new List<Exam>()
        };

    public List<Exam> AvailableExams = new List<Exam>();
    public DetailsPopup confirmationPopup;

    protected override async Task OnInitializedAsync()
    {
        AvailableExams = await api.GetAllAvailableExams();
    }

    public async void ValidFormSubmitted()
    {
        tempProcess.ProcessDate = DateTime.Now;

        jsRuntime.InvokeVoidAsync("console.log", "Valid");
        jsRuntime.InvokeVoidAsync("console.log", tempProcess);

        Process newProcess = await api.PostProcessAsync(tempProcess);

        confirmationPopup.Title = $"Adicionado o Processo {newProcess.Id.ToString()} ({newProcess.ProcessDate.ToShortDateString()})";
        confirmationPopup.process = newProcess;
        confirmationPopup.Show();

        // Reset form information
        tempProcess = new Process
        {
            Person = new Person(),
            Exams = new List<Exam>()
        };
        StateHasChanged();

        

    }

    public void InvalidFormSubmitted()
    {
        jsRuntime.InvokeVoidAsync("console.log", "Invalid");
        jsRuntime.InvokeVoidAsync("console.log", tempProcess);
    }
}
